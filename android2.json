{"all_tests":[{"browser":"yandex","incognito":false,"nightly":false,"testResults":{"misc":{"Tor enabled":{"IsTorExit":false,"passed":false,"description":"The Tor network sends the browser's web requests through a series of relays to hide a user's IP address, thereby helping to mask their identity and location. This test checks to see if the Tor network is being used by default."},"GPC enabled third-party":{"passed":false,"description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a visited website not to sell the user's personal data to other parties. This test checks to see if the GPC header is sent to third-party elements on the web page."},"Stream isolation":{"write":"() => {\n      if (!usingTor) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (usingTor) {\n        return ipAddress;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","unsupported":true,"readSameFirstParty":"Error: Unsupported","readDifferentFirstParty":"Error: Unsupported","testFailed":false,"description":"Browsers that use Tor can use a different Tor circuit per top-level website."},"IP address leak":{"description":"IP addresses can be used to uniquely identify a large percentage of users. A proxy, VPN, or Tor can mask a user's IP address.","passed":false},"GPC enabled first-party":{"header value":"undefined","description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a website not to sell the user's personal data to third parties. This test checks to see if the GPC header is sent by default to the top-level website.","passed":false}},"query":{"fbclid":{"value":"4239638577658478","passed":false,"description":"Facebook Click Identifier"},"gclid":{"value":"4239638577658478","passed":false,"description":"Google Click Identifier"},"msclkid":{"value":"4239638577658478","passed":false,"description":"Microsoft Click ID"},"mc_eid":{"value":"4239638577658478","passed":false,"description":"Mailchimp Email ID (email recipient's address)"},"dclid":{"value":"4239638577658478","passed":false,"description":"DoubleClick Click ID (Google)"},"oly_anon_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'anonymous' customer id"},"oly_enc_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'known' customer id"},"_openstat":{"value":"4239638577658478","passed":false,"description":"Yandex tracking parameter"},"vero_conv":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"vero_id":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"wickedid":{"value":"4239638577658478","passed":false,"description":"Wicked Reports e-commerce tracking"},"yclid":{"value":"4239638577658478","passed":false,"description":"Yandex Click ID"},"__s":{"value":"4239638577658478","passed":false,"description":"Drip.com email address tracking parameter"},"rb_clickid":{"value":"4239638577658478","passed":false,"description":"Unknown high-entropy tracking parameter"},"s_cid":{"value":"4239638577658478","passed":false,"description":"Adobe Site Catalyst tracking parameter"},"ml_subscriber":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"ml_subscriber_hash":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"_hsenc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hssc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hstc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hsfp":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"hsCtaTracking":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"mkt_tok":{"value":"4239638577658478","passed":false,"description":"Adobe Marketo tracking parameter"},"igshid":{"value":"4239638577658478","passed":false,"description":"Instagram tracking parameter"}},"https":{"Upgradable image":{"passed":true,"result":"upgraded","description":"Checks to see if the browser attempts to upgrade an insecure address for an image to HTTPS whenever possible."},"Upgradable script":{"passed":true,"result":"blocked","description":"Checks to see if the browser attempts to upgrade an insecure address for an script to HTTPS whenever possible."},"Upgradable hyperlink":{"upgraded":false,"passed":false,"description":"Checks to see if the user has clicked on a hyperlink to an insecure address, if the browser upgrades that address to HTTPS whenever possible."},"Upgradable address":{"upgraded":false,"passed":false,"description":"Checks to see if an insecure address entered into the browser's address bar is upgraded to HTTPS whenever possible."},"Insecure website":{"passed":false,"result":"Insecure website loaded","description":"Checks to see if the browser stops loading an insecure website and warns the user before giving them the option to continue. Known as HTTPS-Only Mode in some browsers."}},"fingerprinting":{"screenX":{"expression":"screenX","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the left edge of the browser window on screen."},"screenY":{"expression":"screenY","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the top edge of the browser window on screen."},"outerHeight":{"expression":"outerHeight","desired_expression":"innerHeight","actual_value":520,"desired_value":1416,"passed":false,"description":"Height of the browser window in pixels, including browser chrome."},"screen.width":{"expression":"screen.width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen, in pixels."},"screen.height":{"expression":"screen.height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen, in pixels."},"Media query screen width":{"name":"Media query screen width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen in pixels."},"Media query screen height":{"name":"Media query screen height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen in pixels."}},"navigation":{"sessionStorage":{"write":"(secret) => sessionStorage.setItem(\"secret\", secret)","read":"() => sessionStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The sessionStorage API is similar to the localStorage API, but it does not persist across tabs or across browser sessions. Nonetheless, it can be used to track users if they navigate from one website to another. This tracking can be thwarted by partitioning sessionStorage between websites."},"window.name":{"write":"(secret) => parent.postMessage({\"write window.name\": secret})","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read window.name\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The window.name API allows websites to store data that will persist after the user has navigated the tab to a different website. This mechanism could be partitioned so that data is not allowed to persist between websites."},"document.referrer":{"write":"(secret) => { /* do nothing */ }","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read document.referrer\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"https://arthuredelstein.net/","readDifferentFirstParty":"https://arthuredelstein.net/","passed":false,"testFailed":false,"description":"The Referer [sic] request header is a mechanism used by browsers to let a website know where the user is visiting from. This header is inherently tracking users across websites. In recent times, browsers have switched to a policy of trimming a referrer to convey less tracking information, but Referer continues to convey cross-site tracking data by default."}},"supercookies":{"cookie":{"write":"(secret) => {\n      let expiry = new Date();\n      expiry.setFullYear(expiry.getFullYear() + 1);\n      document.cookie = `secret=${secret}; SameSite=None; Secure`;\n    }","read":"() => document.cookie ? document.cookie.match(/secret=(\\S+)/)[1] : null","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The cookie, first introduced by Netscape in 1994, is a small amount of data stored by your browser on a website's behalf. It has legitimate uses, but it is also the classic cross-site tracking mechanism, and today still the most popular method of tracking users across websites. Browsers can stop cookies from being used for cross-site tracking by either blocking or partitioning them."},"localStorage":{"write":"(secret) => localStorage.setItem(\"secret\", secret)","read":"() => localStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The localStorage API gives websites access to a key-value database that will remain available across visits. If the localStorage API is not partitioned or blocked, it can also be used to track users across websites."},"indexedDB":{"write":"async (secret) => {\n      try {\n        return await IdbKeyVal.set(\"secret\", secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => IdbKeyVal.get(\"secret\")","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The IndexedDB API exposes a transactional database to web pages. That database can be used to track users across websites, unless it is partitioned."},"SharedWorker":{"write":"(secret) => {\n      try {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(\"request\");\n        worker.port.onmessage = (e) => resolve(e.data);\n        setTimeout(() => reject(\"no SharedWorker message received\"), 100);\n      })","unsupported":true,"readSameFirstParty":"Error: SharedWorker is not defined","readDifferentFirstParty":"Error: SharedWorker is not defined","testFailed":false,"description":"The SharedWorker API allows scripts from multiple tabs to share a background thread of computation. If SharedWorker is not partitioned, then it can be abused to shared data between websites in your browser."},"blob":{"write":"(secret) => {\n      try {\n        let blobURL = URL.createObjectURL(new Blob([secret]));\n        fetch(`${baseURI}/blob?mode=write&key=${secret}&blobUrl=${encodeURIComponent(blobURL)}`);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async (secret) => {\n      let response = await fetch(`${baseURI}/blob?mode=read&key=${secret}`);\n      let result = await response.json();\n      let blobUrl = decodeURIComponent(result.blobUrl);\n      let blobResponse = await fetch(blobUrl);\n      return blobResponse.text();\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"A 'blob URL' is a local reference to some raw data. Trackers can use a blob URL to share data between websites."},"BroadcastChannel":{"write":"(secret) => {\n      try {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data === \"request\") {\n            bc.postMessage(secret);\n          }\n        };\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data !== \"request\") {\n            resolve(event.data);\n          }\n        };\n        bc.postMessage(\"request\");\n        setTimeout(() => reject({message: \"no BroadcastChannel message\"}), 3000);\n      })","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"A BroadcastChannel is designed to send messages between tabs. In some browsers it can be used for cross-site communication and tracking."},"fetch cache":{"write":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      return key;\n    }","read":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      let countResponse = await fetch(testURI(\"ctr\", \"fetch\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"When a resource is received via the Fetch API, it is frequently cached. That cache can potentially be abused for cross-site tracking."},"XMLHttpRequest cache":{"write":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      return key;\n    }","read":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      let countResponse = await fetch(testURI(\"ctr\", \"xhr\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Similar to the newer Fetch API, any resource received may be cached by the browser. The cache is potentially vulnerable to cross-site tracking attack."},"iframe cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      iframe.addEventListener(\"load\", () => resolve(key), {once: true});\n      iframe.src = testURI(\"resource\", \"page\", key);\n    })","read":"async (key) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      let iframeLoadPromise = new Promise((resolve, reject) => {\n        iframe.addEventListener(\"load\", resolve, {once: true});\n      });\n      let address = testURI(\"resource\", \"page\", key);\n      iframe.src = address;\n      await iframeLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"page\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"An iframe is an element in a web page than allows websites to embed a second web page. Caching of this web page could be abused for cross-site tracking."},"image cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.addEventListener(\"load\", () => resolve(key), {once: true});\n      img.src = testURI(\"resource\", \"image\", key);\n    })","read":"async (key) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      let imgLoadPromise = new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve, {once: true});\n      });\n      img.src = testURI(\"resource\", \"image\", key);\n      await imgLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"image\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Caching of images in web browsers is a standard behavior. But if that cache leaks between websites, it can be abused for cross-site tracking."},"CacheStorage":{"write":"async (key) => {\n      try {\n        let cache = await caches.open(\"supercookies\");\n        cache.addAll([`test.css?key=${key}`]);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let cache = await caches.open(\"supercookies\");\n      let cacheKeys = await cache.keys();\n      let url = cacheKeys[0].url;\n      return (new URL(url)).searchParams.get(\"key\");\n    }","unsupported":false,"readSameFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","readDifferentFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","passed":false,"testFailed":false,"description":"The Cache API is a content storage mechanism originally introduced to support ServiceWorkers. If the same Cache object is accessible to multiple websites, it can be abused to track users."},"favicon cache":{"write":"(key) => key","read":"async (key) => {\n      // Wait for the favicon to load (defined in supercookies.html)\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"favicon\", key), {\"cache\": \"reload\"});\n      let count = (await response.text()).trim();\n      if (count === \"0\") {\n        throw new Error(\"No requests received\");\n      }\n      return count;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A favicon is an icon that represents a website, typically shown in browser tab and bookmarks menu. If the favicon cache is not partitioned, it can be used to track users across websites."},"font cache":{"write":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      return key;\n    }","read":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"font\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Web fonts are sometimes stored in their own cache, which is vulnerable to being abused for cross-site tracking."},"CSS cache":{"write":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return key;\n    }","read":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return fontFamily;\n    }","unsupported":false,"readSameFirstParty":"fake_4865182975632536","readDifferentFirstParty":"fake_588124622566008","passed":true,"testFailed":false,"description":"CSS stylesheets are cached, and if that cache is shared between websites, it can be used to track users across sites."},"locks":{"write":"async (key) => {\n      if (navigator.locks) {\n        navigator.locks.request(key, lock => new Promise((f,r) => {}));\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].clientId;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (navigator.locks) {\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].name;\n      }\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"navigator.locks (only supported in some browsers) allows scripts on multiple tabs to coordinate. If this API is not partitioned, it can be used for cross-site tracking."},"TLS Session ID":{"write":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","read":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","unsupported":false,"readSameFirstParty":"34d6aabf25b50a8dbbd6bd277fc9623f5cf3b1a31c163e8856f13ab48b3948c7","readDifferentFirstParty":"4ebd71dfcc4a2d517b72d2904db5ffbc1c90cda89a369c5873f93042ef1bce55","passed":true,"testFailed":false,"description":"The TLS protocol is used by HTTPS to make connections secure. If the browser were to re-use a TLS session, then the session ID could be used to track users across websites."},"prefetch cache":{"write":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      return key;\n    }","read":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"prefetch\", key), {\"cache\": \"reload\"});\n      let countString = (await response.text()).trim();\n      if (parseInt(countString) === 0) {\n        throw new Error(\"No requests received\");\n      }\n      return countString;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A <link rel='prefetch'...> suggests to browsers they should fetch a resource ahead of time and cache it. But if browsers don't partition this cache, it can be used to track users across websites."},"Web SQL Database":{"write":"async (key) => {\n      if (!window.openDatabase) {\n        throw new Error(\"Unsupported\");\n      }\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let tx = new Promise((resolve) => database.transaction(tx => {\n        tx.executeSql(\n          `CREATE TABLE IF NOT EXISTS cache(\n             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n             name TEXT NOT NULL,\n             value TEXT NOT NULL,\n             UNIQUE (name)\n           )`,\n          [], (tx, rs) => {}, (tx, err) => {});\n        tx.executeSql(\n          `INSERT OR REPLACE INTO cache(name, value)\n           VALUES(?, ?)`,\n          [\"secret\", key], (tx, rs) => {}, (tx, rs) => {});\n      }));\n    }","read":"async () => {\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let result = await new Promise((resolve, reject) => database.transaction(tx => {\n        tx.executeSql(\n          \"SELECT value FROM cache WHERE name=?\",\n          [\"secret\"],\n          (tx, rs) => resolve(rs),\n          (tx, err) => reject(err));\n      }));\n      return result.rows.item(0).value;\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The Web SQL Database is a deprecated web API for storing data in an SQL database."},"Alt-Svc":{"write":"async () => {\n      // Clear Alt-Svc caching first.\n      let responseText = \"\";\n      for (let i = 0; i < 10 && responseText !== \"h2\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/clear\");\n        console.log(\"clear\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h2\") {\n        // Clearing failed.\n        throw new Error(\"Unsupported\");\n      }\n      // Store \"h3\" state in Alt-Svc cache\n      for (let i = 0; i < 10 && responseText !== \"h3\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/protocol\");\n        console.log(\"protocol\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h3\") {\n        // Storage failed.\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => fetchText(\"https://h3.arthuredelstein.net:4433/protocol\")","unsupported":false,"readSameFirstParty":"h3","readDifferentFirstParty":"h3","passed":false,"testFailed":false,"description":"Alt-Svc allows the server to indicate to the web browser that a resource should be loaded on a different server. Because this is a persistent setting, it could be used to track users across websites if it is not correctly partitioned."},"H1 connection":{"write":"async (secret) => {\n      await fetch(`https://h1.arthuredelstein.net:8901/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h1.arthuredelstein.net:8901/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"HTTP/1.x are the classic web connection protocols. If these connections are re-used across websites, they can be used to track users."},"H2 connection":{"write":"async (secret) => {\n      await fetch(`https://h2.arthuredelstein.net:8902/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h2.arthuredelstein.net:8902/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"HTTP/2 is a web connection protocol introduced in 2015. Some browsers re-use HTTP/2 connections across websites and can thus be used to track users."},"H3 connection":{"write":"async (secret) => {\n      // Ensure that we can switch over to h3 via alt-svc:\n      for (let i = 0; i<3; ++i) {\n        await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n        await sleepMs(500);\n      }\n      // Are we now connecting over h3?\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n      let text = await response.text();\n      // Empty response text indicates we are not connecting over h3:\n      if (text.trim() === \"\") {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`);\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"d5a057cd49ff19f3503e3e77b74283cd","readDifferentFirstParty":"d5a057cd49ff19f3503e3e77b74283cd","passed":false,"testFailed":false,"description":"HTTP/3 is a new standard HTTP connection protocol, still in draft but widely supported by browsers. If it is not partitioned, it can be used to track users across websites."},"ServiceWorker":{"write":"async (key) => {\n      if (!navigator.serviceWorker) {\n        throw new Error(\"Unsupported\");\n      }\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      await fetch(`serviceworker-write?secret=${key}`);\n    }","read":"async () => {\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      let response = await fetch(\"serviceworker-read\");\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","readDifferentFirstParty":"b7778fde-d4ad-4170-b972-b9a6e084ff4e","passed":false,"testFailed":false,"description":"The ServiceWorker API allows websites to run code in the background and store content in the browser for offline use. If a ServiceWorker can be accessed from multiple websites, it can be abused to track users across sites."},"HSTS cache":{"description":"The HTTP Strict-Transport-Security response header allows a website to signal that it should only be accessed via HTTPS. The browser remembers this directive in a database, but if this database is not partitioned, then it can be used to track users across websites.\"","passed":false,"unsupported":false,"testFailed":false,"readDifferentFirstParty":"Upgraded to https","readSameFirstParty":"not tested","write":"set HSTS flag","read":"read HSTS flag"}},"trackers":{"Google Tag Manager":{"url":"https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL"},"DoubleClick (Google)":{"url":"https://securepubads.g.doubleclick.net/static/glade.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://securepubads.g.doubleclick.net/static/glade.js"},"Google Analytics":{"url":"https://google-analytics.com/urchin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://google-analytics.com/urchin.js"},"Facebook Pixel":{"url":"https://www.facebook.com/tr?id=123","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.facebook.com/tr?id=123"},"Amazon adsystem":{"url":"https://aax-us-east.amazon-adsystem.com/x/px","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://aax-us-east.amazon-adsystem.com/x/px"},"Google Syndication":{"url":"https://tpc.googlesyndication.com/sodar/UFYwWwmt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://tpc.googlesyndication.com/sodar/UFYwWwmt.js"},"Scorecard Research Beacon":{"url":"https://sb.scorecardresearch.com/internal-c2/default/cs.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://sb.scorecardresearch.com/internal-c2/default/cs.js"},"New Relic":{"url":"https://js-agent.newrelic.com/nr-1212.min.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://js-agent.newrelic.com/nr-1212.min.js"},"Criteo":{"url":"https://csm.da.us.criteo.net/iev","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://csm.da.us.criteo.net/iev"},"Adobe":{"url":"https://munchkin.marketo.net/munchkin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://munchkin.marketo.net/munchkin.js"},"Yandex Metrika":{"url":"https://mc.yandex.ru/metrika/tag.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://mc.yandex.ru/metrika/tag.js"},"AppNext":{"url":"https://acdn.adnxs.com/dmp/up/pixie.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://acdn.adnxs.com/dmp/up/pixie.js"},"Google Ad Services":{"url":"https://www.googleadservices.com/pagead/conversion.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googleadservices.com/pagead/conversion.js"},"Twitter Ads":{"url":"https://static.ads-twitter.com/uwt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://static.ads-twitter.com/uwt.js"},"Bing Ads":{"url":"https://bat.bing.com/bat.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://bat.bing.com/bat.js"},"Taboola":{"url":"https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js"},"Index Exchange":{"url":"https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1"},"Yandex Ads":{"url":"https://yandex.ru/ads/system/header-bidding.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://yandex.ru/ads/system/header-bidding.js"},"Quantcast":{"url":"https://pixel.quantserve.com/pixel","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pixel.quantserve.com/pixel"},"Chartbeat":{"url":"https://pdev.chartbeat.net/ping?h=x&p=x&r=&b=","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pdev.chartbeat.net/ping?h=x&p=x&r=&b="}}},"timeStarted":"2022-01-15T03:51:23.411Z","reportedVersion":"21.11.7.71","os":"Darwin","os_version":"Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101"},{"browser":"yandex","incognito":false,"nightly":false,"testResults":{"misc":{"Tor enabled":{"IsTorExit":false,"passed":false,"description":"The Tor network sends the browser's web requests through a series of relays to hide a user's IP address, thereby helping to mask their identity and location. This test checks to see if the Tor network is being used by default."},"GPC enabled third-party":{"passed":false,"description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a visited website not to sell the user's personal data to other parties. This test checks to see if the GPC header is sent to third-party elements on the web page."},"Stream isolation":{"write":"() => {\n      if (!usingTor) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (usingTor) {\n        return ipAddress;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","unsupported":true,"readSameFirstParty":"Error: Unsupported","readDifferentFirstParty":"Error: Unsupported","testFailed":false,"description":"Browsers that use Tor can use a different Tor circuit per top-level website."},"IP address leak":{"description":"IP addresses can be used to uniquely identify a large percentage of users. A proxy, VPN, or Tor can mask a user's IP address.","passed":false},"GPC enabled first-party":{"header value":"undefined","description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a website not to sell the user's personal data to third parties. This test checks to see if the GPC header is sent by default to the top-level website.","passed":false}},"query":{"fbclid":{"value":"4239638577658478","passed":false,"description":"Facebook Click Identifier"},"gclid":{"value":"4239638577658478","passed":false,"description":"Google Click Identifier"},"msclkid":{"value":"4239638577658478","passed":false,"description":"Microsoft Click ID"},"mc_eid":{"value":"4239638577658478","passed":false,"description":"Mailchimp Email ID (email recipient's address)"},"dclid":{"value":"4239638577658478","passed":false,"description":"DoubleClick Click ID (Google)"},"oly_anon_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'anonymous' customer id"},"oly_enc_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'known' customer id"},"_openstat":{"value":"4239638577658478","passed":false,"description":"Yandex tracking parameter"},"vero_conv":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"vero_id":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"wickedid":{"value":"4239638577658478","passed":false,"description":"Wicked Reports e-commerce tracking"},"yclid":{"value":"4239638577658478","passed":false,"description":"Yandex Click ID"},"__s":{"value":"4239638577658478","passed":false,"description":"Drip.com email address tracking parameter"},"rb_clickid":{"value":"4239638577658478","passed":false,"description":"Unknown high-entropy tracking parameter"},"s_cid":{"value":"4239638577658478","passed":false,"description":"Adobe Site Catalyst tracking parameter"},"ml_subscriber":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"ml_subscriber_hash":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"_hsenc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hssc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hstc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hsfp":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"hsCtaTracking":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"mkt_tok":{"value":"4239638577658478","passed":false,"description":"Adobe Marketo tracking parameter"},"igshid":{"value":"4239638577658478","passed":false,"description":"Instagram tracking parameter"}},"https":{"Upgradable image":{"passed":true,"result":"upgraded","description":"Checks to see if the browser attempts to upgrade an insecure address for an image to HTTPS whenever possible."},"Upgradable script":{"passed":true,"result":"blocked","description":"Checks to see if the browser attempts to upgrade an insecure address for an script to HTTPS whenever possible."},"Upgradable hyperlink":{"upgraded":false,"passed":false,"description":"Checks to see if the user has clicked on a hyperlink to an insecure address, if the browser upgrades that address to HTTPS whenever possible."},"Upgradable address":{"upgraded":false,"passed":false,"description":"Checks to see if an insecure address entered into the browser's address bar is upgraded to HTTPS whenever possible."},"Insecure website":{"passed":false,"result":"Insecure website loaded","description":"Checks to see if the browser stops loading an insecure website and warns the user before giving them the option to continue. Known as HTTPS-Only Mode in some browsers."}},"fingerprinting":{"screenX":{"expression":"screenX","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the left edge of the browser window on screen."},"screenY":{"expression":"screenY","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the top edge of the browser window on screen."},"outerHeight":{"expression":"outerHeight","desired_expression":"innerHeight","actual_value":520,"desired_value":1416,"passed":false,"description":"Height of the browser window in pixels, including browser chrome."},"screen.width":{"expression":"screen.width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen, in pixels."},"screen.height":{"expression":"screen.height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen, in pixels."},"Media query screen width":{"name":"Media query screen width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen in pixels."},"Media query screen height":{"name":"Media query screen height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen in pixels."}},"navigation":{"sessionStorage":{"write":"(secret) => sessionStorage.setItem(\"secret\", secret)","read":"() => sessionStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The sessionStorage API is similar to the localStorage API, but it does not persist across tabs or across browser sessions. Nonetheless, it can be used to track users if they navigate from one website to another. This tracking can be thwarted by partitioning sessionStorage between websites."},"window.name":{"write":"(secret) => parent.postMessage({\"write window.name\": secret})","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read window.name\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The window.name API allows websites to store data that will persist after the user has navigated the tab to a different website. This mechanism could be partitioned so that data is not allowed to persist between websites."},"document.referrer":{"write":"(secret) => { /* do nothing */ }","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read document.referrer\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"https://arthuredelstein.net/","readDifferentFirstParty":"https://arthuredelstein.net/","passed":false,"testFailed":false,"description":"The Referer [sic] request header is a mechanism used by browsers to let a website know where the user is visiting from. This header is inherently tracking users across websites. In recent times, browsers have switched to a policy of trimming a referrer to convey less tracking information, but Referer continues to convey cross-site tracking data by default."}},"supercookies":{"cookie":{"write":"(secret) => {\n      let expiry = new Date();\n      expiry.setFullYear(expiry.getFullYear() + 1);\n      document.cookie = `secret=${secret}; SameSite=None; Secure`;\n    }","read":"() => document.cookie ? document.cookie.match(/secret=(\\S+)/)[1] : null","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The cookie, first introduced by Netscape in 1994, is a small amount of data stored by your browser on a website's behalf. It has legitimate uses, but it is also the classic cross-site tracking mechanism, and today still the most popular method of tracking users across websites. Browsers can stop cookies from being used for cross-site tracking by either blocking or partitioning them."},"localStorage":{"write":"(secret) => localStorage.setItem(\"secret\", secret)","read":"() => localStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The localStorage API gives websites access to a key-value database that will remain available across visits. If the localStorage API is not partitioned or blocked, it can also be used to track users across websites."},"indexedDB":{"write":"async (secret) => {\n      try {\n        return await IdbKeyVal.set(\"secret\", secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => IdbKeyVal.get(\"secret\")","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The IndexedDB API exposes a transactional database to web pages. That database can be used to track users across websites, unless it is partitioned."},"SharedWorker":{"write":"(secret) => {\n      try {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(\"request\");\n        worker.port.onmessage = (e) => resolve(e.data);\n        setTimeout(() => reject(\"no SharedWorker message received\"), 100);\n      })","unsupported":true,"readSameFirstParty":"Error: SharedWorker is not defined","readDifferentFirstParty":"Error: SharedWorker is not defined","testFailed":false,"description":"The SharedWorker API allows scripts from multiple tabs to share a background thread of computation. If SharedWorker is not partitioned, then it can be abused to shared data between websites in your browser."},"blob":{"write":"(secret) => {\n      try {\n        let blobURL = URL.createObjectURL(new Blob([secret]));\n        fetch(`${baseURI}/blob?mode=write&key=${secret}&blobUrl=${encodeURIComponent(blobURL)}`);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async (secret) => {\n      let response = await fetch(`${baseURI}/blob?mode=read&key=${secret}`);\n      let result = await response.json();\n      let blobUrl = decodeURIComponent(result.blobUrl);\n      let blobResponse = await fetch(blobUrl);\n      return blobResponse.text();\n    }","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"A 'blob URL' is a local reference to some raw data. Trackers can use a blob URL to share data between websites."},"BroadcastChannel":{"write":"(secret) => {\n      try {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data === \"request\") {\n            bc.postMessage(secret);\n          }\n        };\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data !== \"request\") {\n            resolve(event.data);\n          }\n        };\n        bc.postMessage(\"request\");\n        setTimeout(() => reject({message: \"no BroadcastChannel message\"}), 3000);\n      })","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"A BroadcastChannel is designed to send messages between tabs. In some browsers it can be used for cross-site communication and tracking."},"fetch cache":{"write":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      return key;\n    }","read":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      let countResponse = await fetch(testURI(\"ctr\", \"fetch\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"When a resource is received via the Fetch API, it is frequently cached. That cache can potentially be abused for cross-site tracking."},"XMLHttpRequest cache":{"write":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      return key;\n    }","read":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      let countResponse = await fetch(testURI(\"ctr\", \"xhr\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Similar to the newer Fetch API, any resource received may be cached by the browser. The cache is potentially vulnerable to cross-site tracking attack."},"iframe cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      iframe.addEventListener(\"load\", () => resolve(key), {once: true});\n      iframe.src = testURI(\"resource\", \"page\", key);\n    })","read":"async (key) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      let iframeLoadPromise = new Promise((resolve, reject) => {\n        iframe.addEventListener(\"load\", resolve, {once: true});\n      });\n      let address = testURI(\"resource\", \"page\", key);\n      iframe.src = address;\n      await iframeLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"page\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"An iframe is an element in a web page than allows websites to embed a second web page. Caching of this web page could be abused for cross-site tracking."},"image cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.addEventListener(\"load\", () => resolve(key), {once: true});\n      img.src = testURI(\"resource\", \"image\", key);\n    })","read":"async (key) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      let imgLoadPromise = new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve, {once: true});\n      });\n      img.src = testURI(\"resource\", \"image\", key);\n      await imgLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"image\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Caching of images in web browsers is a standard behavior. But if that cache leaks between websites, it can be abused for cross-site tracking."},"CacheStorage":{"write":"async (key) => {\n      try {\n        let cache = await caches.open(\"supercookies\");\n        cache.addAll([`test.css?key=${key}`]);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let cache = await caches.open(\"supercookies\");\n      let cacheKeys = await cache.keys();\n      let url = cacheKeys[0].url;\n      return (new URL(url)).searchParams.get(\"key\");\n    }","unsupported":false,"readSameFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","readDifferentFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","passed":false,"testFailed":false,"description":"The Cache API is a content storage mechanism originally introduced to support ServiceWorkers. If the same Cache object is accessible to multiple websites, it can be abused to track users."},"favicon cache":{"write":"(key) => key","read":"async (key) => {\n      // Wait for the favicon to load (defined in supercookies.html)\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"favicon\", key), {\"cache\": \"reload\"});\n      let count = (await response.text()).trim();\n      if (count === \"0\") {\n        throw new Error(\"No requests received\");\n      }\n      return count;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A favicon is an icon that represents a website, typically shown in browser tab and bookmarks menu. If the favicon cache is not partitioned, it can be used to track users across websites."},"font cache":{"write":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      return key;\n    }","read":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"font\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Web fonts are sometimes stored in their own cache, which is vulnerable to being abused for cross-site tracking."},"CSS cache":{"write":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return key;\n    }","read":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return fontFamily;\n    }","unsupported":false,"readSameFirstParty":"fake_6077623946007575","readDifferentFirstParty":"fake_13964893878166795","passed":true,"testFailed":false,"description":"CSS stylesheets are cached, and if that cache is shared between websites, it can be used to track users across sites."},"locks":{"write":"async (key) => {\n      if (navigator.locks) {\n        navigator.locks.request(key, lock => new Promise((f,r) => {}));\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].clientId;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (navigator.locks) {\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].name;\n      }\n    }","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"navigator.locks (only supported in some browsers) allows scripts on multiple tabs to coordinate. If this API is not partitioned, it can be used for cross-site tracking."},"TLS Session ID":{"write":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","read":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","unsupported":false,"readSameFirstParty":"1ea5de8d17caae254a1df9a11b301202d57e381b9944c4c1b524e0a3fc95db61","readDifferentFirstParty":"bd523dd622a2b6695e6431a8dcd5d5b8426f16b9939b805edc87b91c0e2311d1","passed":true,"testFailed":false,"description":"The TLS protocol is used by HTTPS to make connections secure. If the browser were to re-use a TLS session, then the session ID could be used to track users across websites."},"prefetch cache":{"write":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      return key;\n    }","read":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"prefetch\", key), {\"cache\": \"reload\"});\n      let countString = (await response.text()).trim();\n      if (parseInt(countString) === 0) {\n        throw new Error(\"No requests received\");\n      }\n      return countString;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A <link rel='prefetch'...> suggests to browsers they should fetch a resource ahead of time and cache it. But if browsers don't partition this cache, it can be used to track users across websites."},"Web SQL Database":{"write":"async (key) => {\n      if (!window.openDatabase) {\n        throw new Error(\"Unsupported\");\n      }\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let tx = new Promise((resolve) => database.transaction(tx => {\n        tx.executeSql(\n          `CREATE TABLE IF NOT EXISTS cache(\n             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n             name TEXT NOT NULL,\n             value TEXT NOT NULL,\n             UNIQUE (name)\n           )`,\n          [], (tx, rs) => {}, (tx, err) => {});\n        tx.executeSql(\n          `INSERT OR REPLACE INTO cache(name, value)\n           VALUES(?, ?)`,\n          [\"secret\", key], (tx, rs) => {}, (tx, rs) => {});\n      }));\n    }","read":"async () => {\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let result = await new Promise((resolve, reject) => database.transaction(tx => {\n        tx.executeSql(\n          \"SELECT value FROM cache WHERE name=?\",\n          [\"secret\"],\n          (tx, rs) => resolve(rs),\n          (tx, err) => reject(err));\n      }));\n      return result.rows.item(0).value;\n    }","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"The Web SQL Database is a deprecated web API for storing data in an SQL database."},"Alt-Svc":{"write":"async () => {\n      // Clear Alt-Svc caching first.\n      let responseText = \"\";\n      for (let i = 0; i < 10 && responseText !== \"h2\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/clear\");\n        console.log(\"clear\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h2\") {\n        // Clearing failed.\n        throw new Error(\"Unsupported\");\n      }\n      // Store \"h3\" state in Alt-Svc cache\n      for (let i = 0; i < 10 && responseText !== \"h3\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/protocol\");\n        console.log(\"protocol\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h3\") {\n        // Storage failed.\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => fetchText(\"https://h3.arthuredelstein.net:4433/protocol\")","unsupported":false,"readSameFirstParty":"h3","readDifferentFirstParty":"h3","passed":false,"testFailed":false,"description":"Alt-Svc allows the server to indicate to the web browser that a resource should be loaded on a different server. Because this is a persistent setting, it could be used to track users across websites if it is not correctly partitioned."},"H1 connection":{"write":"async (secret) => {\n      await fetch(`https://h1.arthuredelstein.net:8901/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h1.arthuredelstein.net:8901/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"HTTP/1.x are the classic web connection protocols. If these connections are re-used across websites, they can be used to track users."},"H2 connection":{"write":"async (secret) => {\n      await fetch(`https://h2.arthuredelstein.net:8902/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h2.arthuredelstein.net:8902/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","readDifferentFirstParty":"51e87e81-96bc-4730-b728-66b20ebd8c33","passed":false,"testFailed":false,"description":"HTTP/2 is a web connection protocol introduced in 2015. Some browsers re-use HTTP/2 connections across websites and can thus be used to track users."},"H3 connection":{"write":"async (secret) => {\n      // Ensure that we can switch over to h3 via alt-svc:\n      for (let i = 0; i<3; ++i) {\n        await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n        await sleepMs(500);\n      }\n      // Are we now connecting over h3?\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n      let text = await response.text();\n      // Empty response text indicates we are not connecting over h3:\n      if (text.trim() === \"\") {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`);\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"14de730afd91e17ee4a2cf2383877d43","readDifferentFirstParty":"14de730afd91e17ee4a2cf2383877d43","passed":false,"testFailed":false,"description":"HTTP/3 is a new standard HTTP connection protocol, still in draft but widely supported by browsers. If it is not partitioned, it can be used to track users across websites."},"ServiceWorker":{"write":"async (key) => {\n      if (!navigator.serviceWorker) {\n        throw new Error(\"Unsupported\");\n      }\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      await fetch(`serviceworker-write?secret=${key}`);\n    }","read":"async () => {\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      let response = await fetch(\"serviceworker-read\");\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"","readDifferentFirstParty":"","testFailed":true,"description":"The ServiceWorker API allows websites to run code in the background and store content in the browser for offline use. If a ServiceWorker can be accessed from multiple websites, it can be abused to track users across sites."},"HSTS cache":{"description":"The HTTP Strict-Transport-Security response header allows a website to signal that it should only be accessed via HTTPS. The browser remembers this directive in a database, but if this database is not partitioned, then it can be used to track users across websites.\"","passed":false,"unsupported":false,"testFailed":false,"readDifferentFirstParty":"Upgraded to https","readSameFirstParty":"not tested","write":"set HSTS flag","read":"read HSTS flag"}},"trackers":{"Google Tag Manager":{"url":"https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL"},"DoubleClick (Google)":{"url":"https://securepubads.g.doubleclick.net/static/glade.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://securepubads.g.doubleclick.net/static/glade.js"},"Google Analytics":{"url":"https://google-analytics.com/urchin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://google-analytics.com/urchin.js"},"Facebook Pixel":{"url":"https://www.facebook.com/tr?id=123","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.facebook.com/tr?id=123"},"Amazon adsystem":{"url":"https://aax-us-east.amazon-adsystem.com/x/px","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://aax-us-east.amazon-adsystem.com/x/px"},"Google Syndication":{"url":"https://tpc.googlesyndication.com/sodar/UFYwWwmt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://tpc.googlesyndication.com/sodar/UFYwWwmt.js"},"Scorecard Research Beacon":{"url":"https://sb.scorecardresearch.com/internal-c2/default/cs.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://sb.scorecardresearch.com/internal-c2/default/cs.js"},"New Relic":{"url":"https://js-agent.newrelic.com/nr-1212.min.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://js-agent.newrelic.com/nr-1212.min.js"},"Criteo":{"url":"https://csm.da.us.criteo.net/iev","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://csm.da.us.criteo.net/iev"},"Adobe":{"url":"https://munchkin.marketo.net/munchkin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://munchkin.marketo.net/munchkin.js"},"Yandex Metrika":{"url":"https://mc.yandex.ru/metrika/tag.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://mc.yandex.ru/metrika/tag.js"},"AppNext":{"url":"https://acdn.adnxs.com/dmp/up/pixie.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://acdn.adnxs.com/dmp/up/pixie.js"},"Google Ad Services":{"url":"https://www.googleadservices.com/pagead/conversion.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googleadservices.com/pagead/conversion.js"},"Twitter Ads":{"url":"https://static.ads-twitter.com/uwt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://static.ads-twitter.com/uwt.js"},"Bing Ads":{"url":"https://bat.bing.com/bat.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://bat.bing.com/bat.js"},"Taboola":{"url":"https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js"},"Index Exchange":{"url":"https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1"},"Yandex Ads":{"url":"https://yandex.ru/ads/system/header-bidding.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://yandex.ru/ads/system/header-bidding.js"},"Quantcast":{"url":"https://pixel.quantserve.com/pixel","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pixel.quantserve.com/pixel"},"Chartbeat":{"url":"https://pdev.chartbeat.net/ping?h=x&p=x&r=&b=","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pdev.chartbeat.net/ping?h=x&p=x&r=&b="}}},"timeStarted":"2022-01-15T03:52:52.117Z","reportedVersion":"21.11.7.71","os":"Darwin","os_version":"Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101"},{"browser":"yandex","incognito":false,"nightly":false,"testResults":{"misc":{"Tor enabled":{"IsTorExit":false,"passed":false,"description":"The Tor network sends the browser's web requests through a series of relays to hide a user's IP address, thereby helping to mask their identity and location. This test checks to see if the Tor network is being used by default."},"GPC enabled third-party":{"passed":false,"description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a visited website not to sell the user's personal data to other parties. This test checks to see if the GPC header is sent to third-party elements on the web page."},"Stream isolation":{"write":"() => {\n      if (!usingTor) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (usingTor) {\n        return ipAddress;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","unsupported":true,"readSameFirstParty":"Error: Unsupported","readDifferentFirstParty":"Error: Unsupported","testFailed":false,"description":"Browsers that use Tor can use a different Tor circuit per top-level website."},"IP address leak":{"description":"IP addresses can be used to uniquely identify a large percentage of users. A proxy, VPN, or Tor can mask a user's IP address.","passed":false},"GPC enabled first-party":{"header value":"undefined","description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a website not to sell the user's personal data to third parties. This test checks to see if the GPC header is sent by default to the top-level website.","passed":false}},"query":{"fbclid":{"value":"4239638577658478","passed":false,"description":"Facebook Click Identifier"},"gclid":{"value":"4239638577658478","passed":false,"description":"Google Click Identifier"},"msclkid":{"value":"4239638577658478","passed":false,"description":"Microsoft Click ID"},"mc_eid":{"value":"4239638577658478","passed":false,"description":"Mailchimp Email ID (email recipient's address)"},"dclid":{"value":"4239638577658478","passed":false,"description":"DoubleClick Click ID (Google)"},"oly_anon_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'anonymous' customer id"},"oly_enc_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'known' customer id"},"_openstat":{"value":"4239638577658478","passed":false,"description":"Yandex tracking parameter"},"vero_conv":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"vero_id":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"wickedid":{"value":"4239638577658478","passed":false,"description":"Wicked Reports e-commerce tracking"},"yclid":{"value":"4239638577658478","passed":false,"description":"Yandex Click ID"},"__s":{"value":"4239638577658478","passed":false,"description":"Drip.com email address tracking parameter"},"rb_clickid":{"value":"4239638577658478","passed":false,"description":"Unknown high-entropy tracking parameter"},"s_cid":{"value":"4239638577658478","passed":false,"description":"Adobe Site Catalyst tracking parameter"},"ml_subscriber":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"ml_subscriber_hash":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"_hsenc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hssc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hstc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hsfp":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"hsCtaTracking":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"mkt_tok":{"value":"4239638577658478","passed":false,"description":"Adobe Marketo tracking parameter"},"igshid":{"value":"4239638577658478","passed":false,"description":"Instagram tracking parameter"}},"https":{"Upgradable image":{"passed":true,"result":"upgraded","description":"Checks to see if the browser attempts to upgrade an insecure address for an image to HTTPS whenever possible."},"Upgradable script":{"passed":true,"result":"blocked","description":"Checks to see if the browser attempts to upgrade an insecure address for an script to HTTPS whenever possible."},"Upgradable hyperlink":{"upgraded":false,"passed":false,"description":"Checks to see if the user has clicked on a hyperlink to an insecure address, if the browser upgrades that address to HTTPS whenever possible."},"Upgradable address":{"upgraded":false,"passed":false,"description":"Checks to see if an insecure address entered into the browser's address bar is upgraded to HTTPS whenever possible."},"Insecure website":{"passed":false,"result":"Insecure website loaded","description":"Checks to see if the browser stops loading an insecure website and warns the user before giving them the option to continue. Known as HTTPS-Only Mode in some browsers."}},"fingerprinting":{"screenX":{"expression":"screenX","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the left edge of the browser window on screen."},"screenY":{"expression":"screenY","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the top edge of the browser window on screen."},"outerHeight":{"expression":"outerHeight","desired_expression":"innerHeight","actual_value":520,"desired_value":1416,"passed":false,"description":"Height of the browser window in pixels, including browser chrome."},"screen.width":{"expression":"screen.width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen, in pixels."},"screen.height":{"expression":"screen.height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen, in pixels."},"Media query screen width":{"name":"Media query screen width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen in pixels."},"Media query screen height":{"name":"Media query screen height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen in pixels."}},"navigation":{"sessionStorage":{"write":"(secret) => sessionStorage.setItem(\"secret\", secret)","read":"() => sessionStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The sessionStorage API is similar to the localStorage API, but it does not persist across tabs or across browser sessions. Nonetheless, it can be used to track users if they navigate from one website to another. This tracking can be thwarted by partitioning sessionStorage between websites."},"window.name":{"write":"(secret) => parent.postMessage({\"write window.name\": secret})","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read window.name\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The window.name API allows websites to store data that will persist after the user has navigated the tab to a different website. This mechanism could be partitioned so that data is not allowed to persist between websites."},"document.referrer":{"write":"(secret) => { /* do nothing */ }","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read document.referrer\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"https://arthuredelstein.net/","readDifferentFirstParty":"https://arthuredelstein.net/","passed":false,"testFailed":false,"description":"The Referer [sic] request header is a mechanism used by browsers to let a website know where the user is visiting from. This header is inherently tracking users across websites. In recent times, browsers have switched to a policy of trimming a referrer to convey less tracking information, but Referer continues to convey cross-site tracking data by default."}},"supercookies":{"cookie":{"write":"(secret) => {\n      let expiry = new Date();\n      expiry.setFullYear(expiry.getFullYear() + 1);\n      document.cookie = `secret=${secret}; SameSite=None; Secure`;\n    }","read":"() => document.cookie ? document.cookie.match(/secret=(\\S+)/)[1] : null","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The cookie, first introduced by Netscape in 1994, is a small amount of data stored by your browser on a website's behalf. It has legitimate uses, but it is also the classic cross-site tracking mechanism, and today still the most popular method of tracking users across websites. Browsers can stop cookies from being used for cross-site tracking by either blocking or partitioning them."},"localStorage":{"write":"(secret) => localStorage.setItem(\"secret\", secret)","read":"() => localStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The localStorage API gives websites access to a key-value database that will remain available across visits. If the localStorage API is not partitioned or blocked, it can also be used to track users across websites."},"indexedDB":{"write":"async (secret) => {\n      try {\n        return await IdbKeyVal.set(\"secret\", secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => IdbKeyVal.get(\"secret\")","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The IndexedDB API exposes a transactional database to web pages. That database can be used to track users across websites, unless it is partitioned."},"SharedWorker":{"write":"(secret) => {\n      try {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(\"request\");\n        worker.port.onmessage = (e) => resolve(e.data);\n        setTimeout(() => reject(\"no SharedWorker message received\"), 100);\n      })","unsupported":true,"readSameFirstParty":"Error: SharedWorker is not defined","readDifferentFirstParty":"Error: SharedWorker is not defined","testFailed":false,"description":"The SharedWorker API allows scripts from multiple tabs to share a background thread of computation. If SharedWorker is not partitioned, then it can be abused to shared data between websites in your browser."},"blob":{"write":"(secret) => {\n      try {\n        let blobURL = URL.createObjectURL(new Blob([secret]));\n        fetch(`${baseURI}/blob?mode=write&key=${secret}&blobUrl=${encodeURIComponent(blobURL)}`);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async (secret) => {\n      let response = await fetch(`${baseURI}/blob?mode=read&key=${secret}`);\n      let result = await response.json();\n      let blobUrl = decodeURIComponent(result.blobUrl);\n      let blobResponse = await fetch(blobUrl);\n      return blobResponse.text();\n    }","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"A 'blob URL' is a local reference to some raw data. Trackers can use a blob URL to share data between websites."},"BroadcastChannel":{"write":"(secret) => {\n      try {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data === \"request\") {\n            bc.postMessage(secret);\n          }\n        };\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data !== \"request\") {\n            resolve(event.data);\n          }\n        };\n        bc.postMessage(\"request\");\n        setTimeout(() => reject({message: \"no BroadcastChannel message\"}), 3000);\n      })","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"A BroadcastChannel is designed to send messages between tabs. In some browsers it can be used for cross-site communication and tracking."},"fetch cache":{"write":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      return key;\n    }","read":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      let countResponse = await fetch(testURI(\"ctr\", \"fetch\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"When a resource is received via the Fetch API, it is frequently cached. That cache can potentially be abused for cross-site tracking."},"XMLHttpRequest cache":{"write":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      return key;\n    }","read":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      let countResponse = await fetch(testURI(\"ctr\", \"xhr\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Similar to the newer Fetch API, any resource received may be cached by the browser. The cache is potentially vulnerable to cross-site tracking attack."},"iframe cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      iframe.addEventListener(\"load\", () => resolve(key), {once: true});\n      iframe.src = testURI(\"resource\", \"page\", key);\n    })","read":"async (key) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      let iframeLoadPromise = new Promise((resolve, reject) => {\n        iframe.addEventListener(\"load\", resolve, {once: true});\n      });\n      let address = testURI(\"resource\", \"page\", key);\n      iframe.src = address;\n      await iframeLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"page\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"An iframe is an element in a web page than allows websites to embed a second web page. Caching of this web page could be abused for cross-site tracking."},"image cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.addEventListener(\"load\", () => resolve(key), {once: true});\n      img.src = testURI(\"resource\", \"image\", key);\n    })","read":"async (key) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      let imgLoadPromise = new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve, {once: true});\n      });\n      img.src = testURI(\"resource\", \"image\", key);\n      await imgLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"image\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Caching of images in web browsers is a standard behavior. But if that cache leaks between websites, it can be abused for cross-site tracking."},"CacheStorage":{"write":"async (key) => {\n      try {\n        let cache = await caches.open(\"supercookies\");\n        cache.addAll([`test.css?key=${key}`]);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let cache = await caches.open(\"supercookies\");\n      let cacheKeys = await cache.keys();\n      let url = cacheKeys[0].url;\n      return (new URL(url)).searchParams.get(\"key\");\n    }","unsupported":false,"readSameFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","readDifferentFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","passed":false,"testFailed":false,"description":"The Cache API is a content storage mechanism originally introduced to support ServiceWorkers. If the same Cache object is accessible to multiple websites, it can be abused to track users."},"favicon cache":{"write":"(key) => key","read":"async (key) => {\n      // Wait for the favicon to load (defined in supercookies.html)\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"favicon\", key), {\"cache\": \"reload\"});\n      let count = (await response.text()).trim();\n      if (count === \"0\") {\n        throw new Error(\"No requests received\");\n      }\n      return count;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A favicon is an icon that represents a website, typically shown in browser tab and bookmarks menu. If the favicon cache is not partitioned, it can be used to track users across websites."},"font cache":{"write":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      return key;\n    }","read":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"font\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Web fonts are sometimes stored in their own cache, which is vulnerable to being abused for cross-site tracking."},"CSS cache":{"write":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return key;\n    }","read":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return fontFamily;\n    }","unsupported":false,"readSameFirstParty":"fake_6508513857846618","readDifferentFirstParty":"fake_36604242149788035","passed":true,"testFailed":false,"description":"CSS stylesheets are cached, and if that cache is shared between websites, it can be used to track users across sites."},"locks":{"write":"async (key) => {\n      if (navigator.locks) {\n        navigator.locks.request(key, lock => new Promise((f,r) => {}));\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].clientId;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (navigator.locks) {\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].name;\n      }\n    }","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"navigator.locks (only supported in some browsers) allows scripts on multiple tabs to coordinate. If this API is not partitioned, it can be used for cross-site tracking."},"TLS Session ID":{"write":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","read":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","unsupported":false,"readSameFirstParty":"d945193d97e2f0ad61f1c61c601d57d1c7f51e393c1ada488507da4da16bcb9f","readDifferentFirstParty":"76c5a6dfe1f4cf8c9d3f546b10e43e1e3f242c2174ed288ea7a7c6b6514e2fb0","passed":true,"testFailed":false,"description":"The TLS protocol is used by HTTPS to make connections secure. If the browser were to re-use a TLS session, then the session ID could be used to track users across websites."},"prefetch cache":{"write":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      return key;\n    }","read":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"prefetch\", key), {\"cache\": \"reload\"});\n      let countString = (await response.text()).trim();\n      if (parseInt(countString) === 0) {\n        throw new Error(\"No requests received\");\n      }\n      return countString;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A <link rel='prefetch'...> suggests to browsers they should fetch a resource ahead of time and cache it. But if browsers don't partition this cache, it can be used to track users across websites."},"Web SQL Database":{"write":"async (key) => {\n      if (!window.openDatabase) {\n        throw new Error(\"Unsupported\");\n      }\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let tx = new Promise((resolve) => database.transaction(tx => {\n        tx.executeSql(\n          `CREATE TABLE IF NOT EXISTS cache(\n             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n             name TEXT NOT NULL,\n             value TEXT NOT NULL,\n             UNIQUE (name)\n           )`,\n          [], (tx, rs) => {}, (tx, err) => {});\n        tx.executeSql(\n          `INSERT OR REPLACE INTO cache(name, value)\n           VALUES(?, ?)`,\n          [\"secret\", key], (tx, rs) => {}, (tx, rs) => {});\n      }));\n    }","read":"async () => {\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let result = await new Promise((resolve, reject) => database.transaction(tx => {\n        tx.executeSql(\n          \"SELECT value FROM cache WHERE name=?\",\n          [\"secret\"],\n          (tx, rs) => resolve(rs),\n          (tx, err) => reject(err));\n      }));\n      return result.rows.item(0).value;\n    }","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"The Web SQL Database is a deprecated web API for storing data in an SQL database."},"Alt-Svc":{"write":"async () => {\n      // Clear Alt-Svc caching first.\n      let responseText = \"\";\n      for (let i = 0; i < 10 && responseText !== \"h2\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/clear\");\n        console.log(\"clear\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h2\") {\n        // Clearing failed.\n        throw new Error(\"Unsupported\");\n      }\n      // Store \"h3\" state in Alt-Svc cache\n      for (let i = 0; i < 10 && responseText !== \"h3\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/protocol\");\n        console.log(\"protocol\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h3\") {\n        // Storage failed.\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => fetchText(\"https://h3.arthuredelstein.net:4433/protocol\")","unsupported":false,"readSameFirstParty":"h3","readDifferentFirstParty":"h3","passed":false,"testFailed":false,"description":"Alt-Svc allows the server to indicate to the web browser that a resource should be loaded on a different server. Because this is a persistent setting, it could be used to track users across websites if it is not correctly partitioned."},"H1 connection":{"write":"async (secret) => {\n      await fetch(`https://h1.arthuredelstein.net:8901/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h1.arthuredelstein.net:8901/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"HTTP/1.x are the classic web connection protocols. If these connections are re-used across websites, they can be used to track users."},"H2 connection":{"write":"async (secret) => {\n      await fetch(`https://h2.arthuredelstein.net:8902/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h2.arthuredelstein.net:8902/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","readDifferentFirstParty":"17af7e6c-d1a1-4835-9ec5-9cb2eab37ec8","passed":false,"testFailed":false,"description":"HTTP/2 is a web connection protocol introduced in 2015. Some browsers re-use HTTP/2 connections across websites and can thus be used to track users."},"H3 connection":{"write":"async (secret) => {\n      // Ensure that we can switch over to h3 via alt-svc:\n      for (let i = 0; i<3; ++i) {\n        await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n        await sleepMs(500);\n      }\n      // Are we now connecting over h3?\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n      let text = await response.text();\n      // Empty response text indicates we are not connecting over h3:\n      if (text.trim() === \"\") {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`);\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"76a83eeaba36439c77b07bc6219fac24","readDifferentFirstParty":"76a83eeaba36439c77b07bc6219fac24","passed":false,"testFailed":false,"description":"HTTP/3 is a new standard HTTP connection protocol, still in draft but widely supported by browsers. If it is not partitioned, it can be used to track users across websites."},"ServiceWorker":{"write":"async (key) => {\n      if (!navigator.serviceWorker) {\n        throw new Error(\"Unsupported\");\n      }\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      await fetch(`serviceworker-write?secret=${key}`);\n    }","read":"async () => {\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      let response = await fetch(\"serviceworker-read\");\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"","readDifferentFirstParty":"","testFailed":true,"description":"The ServiceWorker API allows websites to run code in the background and store content in the browser for offline use. If a ServiceWorker can be accessed from multiple websites, it can be abused to track users across sites."},"HSTS cache":{"description":"The HTTP Strict-Transport-Security response header allows a website to signal that it should only be accessed via HTTPS. The browser remembers this directive in a database, but if this database is not partitioned, then it can be used to track users across websites.\"","passed":false,"unsupported":false,"testFailed":false,"readDifferentFirstParty":"Upgraded to https","readSameFirstParty":"not tested","write":"set HSTS flag","read":"read HSTS flag"}},"trackers":{"Google Tag Manager":{"url":"https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL"},"DoubleClick (Google)":{"url":"https://securepubads.g.doubleclick.net/static/glade.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://securepubads.g.doubleclick.net/static/glade.js"},"Google Analytics":{"url":"https://google-analytics.com/urchin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://google-analytics.com/urchin.js"},"Facebook Pixel":{"url":"https://www.facebook.com/tr?id=123","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.facebook.com/tr?id=123"},"Amazon adsystem":{"url":"https://aax-us-east.amazon-adsystem.com/x/px","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://aax-us-east.amazon-adsystem.com/x/px"},"Google Syndication":{"url":"https://tpc.googlesyndication.com/sodar/UFYwWwmt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://tpc.googlesyndication.com/sodar/UFYwWwmt.js"},"Scorecard Research Beacon":{"url":"https://sb.scorecardresearch.com/internal-c2/default/cs.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://sb.scorecardresearch.com/internal-c2/default/cs.js"},"New Relic":{"url":"https://js-agent.newrelic.com/nr-1212.min.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://js-agent.newrelic.com/nr-1212.min.js"},"Criteo":{"url":"https://csm.da.us.criteo.net/iev","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://csm.da.us.criteo.net/iev"},"Adobe":{"url":"https://munchkin.marketo.net/munchkin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://munchkin.marketo.net/munchkin.js"},"Yandex Metrika":{"url":"https://mc.yandex.ru/metrika/tag.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://mc.yandex.ru/metrika/tag.js"},"AppNext":{"url":"https://acdn.adnxs.com/dmp/up/pixie.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://acdn.adnxs.com/dmp/up/pixie.js"},"Google Ad Services":{"url":"https://www.googleadservices.com/pagead/conversion.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googleadservices.com/pagead/conversion.js"},"Twitter Ads":{"url":"https://static.ads-twitter.com/uwt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://static.ads-twitter.com/uwt.js"},"Bing Ads":{"url":"https://bat.bing.com/bat.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://bat.bing.com/bat.js"},"Taboola":{"url":"https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js"},"Index Exchange":{"url":"https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1"},"Yandex Ads":{"url":"https://yandex.ru/ads/system/header-bidding.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://yandex.ru/ads/system/header-bidding.js"},"Quantcast":{"url":"https://pixel.quantserve.com/pixel","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pixel.quantserve.com/pixel"},"Chartbeat":{"url":"https://pdev.chartbeat.net/ping?h=x&p=x&r=&b=","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pdev.chartbeat.net/ping?h=x&p=x&r=&b="}}},"timeStarted":"2022-01-15T03:54:08.613Z","reportedVersion":"21.11.7.71","os":"Darwin","os_version":"Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101"},{"browser":"yandex","incognito":false,"nightly":false,"testResults":{"misc":{"Tor enabled":{"IsTorExit":false,"passed":false,"description":"The Tor network sends the browser's web requests through a series of relays to hide a user's IP address, thereby helping to mask their identity and location. This test checks to see if the Tor network is being used by default."},"GPC enabled third-party":{"passed":false,"description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a visited website not to sell the user's personal data to other parties. This test checks to see if the GPC header is sent to third-party elements on the web page."},"Stream isolation":{"write":"() => {\n      if (!usingTor) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (usingTor) {\n        return ipAddress;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","unsupported":true,"readSameFirstParty":"Error: Unsupported","readDifferentFirstParty":"Error: Unsupported","testFailed":false,"description":"Browsers that use Tor can use a different Tor circuit per top-level website."},"IP address leak":{"description":"IP addresses can be used to uniquely identify a large percentage of users. A proxy, VPN, or Tor can mask a user's IP address.","passed":false},"GPC enabled first-party":{"header value":"undefined","description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a website not to sell the user's personal data to third parties. This test checks to see if the GPC header is sent by default to the top-level website.","passed":false}},"query":{"fbclid":{"value":"4239638577658478","passed":false,"description":"Facebook Click Identifier"},"gclid":{"value":"4239638577658478","passed":false,"description":"Google Click Identifier"},"msclkid":{"value":"4239638577658478","passed":false,"description":"Microsoft Click ID"},"mc_eid":{"value":"4239638577658478","passed":false,"description":"Mailchimp Email ID (email recipient's address)"},"dclid":{"value":"4239638577658478","passed":false,"description":"DoubleClick Click ID (Google)"},"oly_anon_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'anonymous' customer id"},"oly_enc_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'known' customer id"},"_openstat":{"value":"4239638577658478","passed":false,"description":"Yandex tracking parameter"},"vero_conv":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"vero_id":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"wickedid":{"value":"4239638577658478","passed":false,"description":"Wicked Reports e-commerce tracking"},"yclid":{"value":"4239638577658478","passed":false,"description":"Yandex Click ID"},"__s":{"value":"4239638577658478","passed":false,"description":"Drip.com email address tracking parameter"},"rb_clickid":{"value":"4239638577658478","passed":false,"description":"Unknown high-entropy tracking parameter"},"s_cid":{"value":"4239638577658478","passed":false,"description":"Adobe Site Catalyst tracking parameter"},"ml_subscriber":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"ml_subscriber_hash":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"_hsenc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hssc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hstc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hsfp":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"hsCtaTracking":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"mkt_tok":{"value":"4239638577658478","passed":false,"description":"Adobe Marketo tracking parameter"},"igshid":{"value":"4239638577658478","passed":false,"description":"Instagram tracking parameter"}},"https":{"Upgradable image":{"passed":true,"result":"upgraded","description":"Checks to see if the browser attempts to upgrade an insecure address for an image to HTTPS whenever possible."},"Upgradable script":{"passed":true,"result":"blocked","description":"Checks to see if the browser attempts to upgrade an insecure address for an script to HTTPS whenever possible."},"Upgradable hyperlink":{"upgraded":false,"passed":false,"description":"Checks to see if the user has clicked on a hyperlink to an insecure address, if the browser upgrades that address to HTTPS whenever possible."},"Upgradable address":{"upgraded":false,"passed":false,"description":"Checks to see if an insecure address entered into the browser's address bar is upgraded to HTTPS whenever possible."},"Insecure website":{"passed":false,"result":"Insecure website loaded","description":"Checks to see if the browser stops loading an insecure website and warns the user before giving them the option to continue. Known as HTTPS-Only Mode in some browsers."}},"fingerprinting":{"screenX":{"expression":"screenX","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the left edge of the browser window on screen."},"screenY":{"expression":"screenY","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the top edge of the browser window on screen."},"outerHeight":{"expression":"outerHeight","desired_expression":"innerHeight","actual_value":520,"desired_value":1416,"passed":false,"description":"Height of the browser window in pixels, including browser chrome."},"screen.width":{"expression":"screen.width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen, in pixels."},"screen.height":{"expression":"screen.height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen, in pixels."},"Media query screen width":{"name":"Media query screen width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen in pixels."},"Media query screen height":{"name":"Media query screen height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen in pixels."}},"navigation":{"sessionStorage":{"write":"(secret) => sessionStorage.setItem(\"secret\", secret)","read":"() => sessionStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The sessionStorage API is similar to the localStorage API, but it does not persist across tabs or across browser sessions. Nonetheless, it can be used to track users if they navigate from one website to another. This tracking can be thwarted by partitioning sessionStorage between websites."},"window.name":{"write":"(secret) => parent.postMessage({\"write window.name\": secret})","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read window.name\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The window.name API allows websites to store data that will persist after the user has navigated the tab to a different website. This mechanism could be partitioned so that data is not allowed to persist between websites."},"document.referrer":{"write":"(secret) => { /* do nothing */ }","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read document.referrer\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"https://arthuredelstein.net/","readDifferentFirstParty":"https://arthuredelstein.net/","passed":false,"testFailed":false,"description":"The Referer [sic] request header is a mechanism used by browsers to let a website know where the user is visiting from. This header is inherently tracking users across websites. In recent times, browsers have switched to a policy of trimming a referrer to convey less tracking information, but Referer continues to convey cross-site tracking data by default."}},"supercookies":{"cookie":{"write":"(secret) => {\n      let expiry = new Date();\n      expiry.setFullYear(expiry.getFullYear() + 1);\n      document.cookie = `secret=${secret}; SameSite=None; Secure`;\n    }","read":"() => document.cookie ? document.cookie.match(/secret=(\\S+)/)[1] : null","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The cookie, first introduced by Netscape in 1994, is a small amount of data stored by your browser on a website's behalf. It has legitimate uses, but it is also the classic cross-site tracking mechanism, and today still the most popular method of tracking users across websites. Browsers can stop cookies from being used for cross-site tracking by either blocking or partitioning them."},"localStorage":{"write":"(secret) => localStorage.setItem(\"secret\", secret)","read":"() => localStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The localStorage API gives websites access to a key-value database that will remain available across visits. If the localStorage API is not partitioned or blocked, it can also be used to track users across websites."},"indexedDB":{"write":"async (secret) => {\n      try {\n        return await IdbKeyVal.set(\"secret\", secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => IdbKeyVal.get(\"secret\")","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The IndexedDB API exposes a transactional database to web pages. That database can be used to track users across websites, unless it is partitioned."},"SharedWorker":{"write":"(secret) => {\n      try {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(\"request\");\n        worker.port.onmessage = (e) => resolve(e.data);\n        setTimeout(() => reject(\"no SharedWorker message received\"), 100);\n      })","unsupported":true,"readSameFirstParty":"Error: SharedWorker is not defined","readDifferentFirstParty":"Error: SharedWorker is not defined","testFailed":false,"description":"The SharedWorker API allows scripts from multiple tabs to share a background thread of computation. If SharedWorker is not partitioned, then it can be abused to shared data between websites in your browser."},"blob":{"write":"(secret) => {\n      try {\n        let blobURL = URL.createObjectURL(new Blob([secret]));\n        fetch(`${baseURI}/blob?mode=write&key=${secret}&blobUrl=${encodeURIComponent(blobURL)}`);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async (secret) => {\n      let response = await fetch(`${baseURI}/blob?mode=read&key=${secret}`);\n      let result = await response.json();\n      let blobUrl = decodeURIComponent(result.blobUrl);\n      let blobResponse = await fetch(blobUrl);\n      return blobResponse.text();\n    }","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"A 'blob URL' is a local reference to some raw data. Trackers can use a blob URL to share data between websites."},"BroadcastChannel":{"write":"(secret) => {\n      try {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data === \"request\") {\n            bc.postMessage(secret);\n          }\n        };\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data !== \"request\") {\n            resolve(event.data);\n          }\n        };\n        bc.postMessage(\"request\");\n        setTimeout(() => reject({message: \"no BroadcastChannel message\"}), 3000);\n      })","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"A BroadcastChannel is designed to send messages between tabs. In some browsers it can be used for cross-site communication and tracking."},"fetch cache":{"write":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      return key;\n    }","read":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      let countResponse = await fetch(testURI(\"ctr\", \"fetch\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"When a resource is received via the Fetch API, it is frequently cached. That cache can potentially be abused for cross-site tracking."},"XMLHttpRequest cache":{"write":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      return key;\n    }","read":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      let countResponse = await fetch(testURI(\"ctr\", \"xhr\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Similar to the newer Fetch API, any resource received may be cached by the browser. The cache is potentially vulnerable to cross-site tracking attack."},"iframe cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      iframe.addEventListener(\"load\", () => resolve(key), {once: true});\n      iframe.src = testURI(\"resource\", \"page\", key);\n    })","read":"async (key) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      let iframeLoadPromise = new Promise((resolve, reject) => {\n        iframe.addEventListener(\"load\", resolve, {once: true});\n      });\n      let address = testURI(\"resource\", \"page\", key);\n      iframe.src = address;\n      await iframeLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"page\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"An iframe is an element in a web page than allows websites to embed a second web page. Caching of this web page could be abused for cross-site tracking."},"image cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.addEventListener(\"load\", () => resolve(key), {once: true});\n      img.src = testURI(\"resource\", \"image\", key);\n    })","read":"async (key) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      let imgLoadPromise = new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve, {once: true});\n      });\n      img.src = testURI(\"resource\", \"image\", key);\n      await imgLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"image\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Caching of images in web browsers is a standard behavior. But if that cache leaks between websites, it can be abused for cross-site tracking."},"CacheStorage":{"write":"async (key) => {\n      try {\n        let cache = await caches.open(\"supercookies\");\n        cache.addAll([`test.css?key=${key}`]);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let cache = await caches.open(\"supercookies\");\n      let cacheKeys = await cache.keys();\n      let url = cacheKeys[0].url;\n      return (new URL(url)).searchParams.get(\"key\");\n    }","unsupported":false,"readSameFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","readDifferentFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","passed":false,"testFailed":false,"description":"The Cache API is a content storage mechanism originally introduced to support ServiceWorkers. If the same Cache object is accessible to multiple websites, it can be abused to track users."},"favicon cache":{"write":"(key) => key","read":"async (key) => {\n      // Wait for the favicon to load (defined in supercookies.html)\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"favicon\", key), {\"cache\": \"reload\"});\n      let count = (await response.text()).trim();\n      if (count === \"0\") {\n        throw new Error(\"No requests received\");\n      }\n      return count;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A favicon is an icon that represents a website, typically shown in browser tab and bookmarks menu. If the favicon cache is not partitioned, it can be used to track users across websites."},"font cache":{"write":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      return key;\n    }","read":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"font\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Web fonts are sometimes stored in their own cache, which is vulnerable to being abused for cross-site tracking."},"CSS cache":{"write":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return key;\n    }","read":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return fontFamily;\n    }","unsupported":false,"readSameFirstParty":"fake_5287254966528998","readDifferentFirstParty":"fake_6077221547003606","passed":true,"testFailed":false,"description":"CSS stylesheets are cached, and if that cache is shared between websites, it can be used to track users across sites."},"locks":{"write":"async (key) => {\n      if (navigator.locks) {\n        navigator.locks.request(key, lock => new Promise((f,r) => {}));\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].clientId;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (navigator.locks) {\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].name;\n      }\n    }","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"navigator.locks (only supported in some browsers) allows scripts on multiple tabs to coordinate. If this API is not partitioned, it can be used for cross-site tracking."},"TLS Session ID":{"write":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","read":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","unsupported":false,"readSameFirstParty":"c0a6c5debcf86df38ac4b3b3e4aed15be1a7cede78aee29dff3e2e460aa27492","readDifferentFirstParty":"b56a2ada252af683532bca2dc7c6211e07810f2d5e2a03f14660a1a89a5ea204","passed":true,"testFailed":false,"description":"The TLS protocol is used by HTTPS to make connections secure. If the browser were to re-use a TLS session, then the session ID could be used to track users across websites."},"prefetch cache":{"write":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      return key;\n    }","read":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"prefetch\", key), {\"cache\": \"reload\"});\n      let countString = (await response.text()).trim();\n      if (parseInt(countString) === 0) {\n        throw new Error(\"No requests received\");\n      }\n      return countString;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A <link rel='prefetch'...> suggests to browsers they should fetch a resource ahead of time and cache it. But if browsers don't partition this cache, it can be used to track users across websites."},"Web SQL Database":{"write":"async (key) => {\n      if (!window.openDatabase) {\n        throw new Error(\"Unsupported\");\n      }\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let tx = new Promise((resolve) => database.transaction(tx => {\n        tx.executeSql(\n          `CREATE TABLE IF NOT EXISTS cache(\n             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n             name TEXT NOT NULL,\n             value TEXT NOT NULL,\n             UNIQUE (name)\n           )`,\n          [], (tx, rs) => {}, (tx, err) => {});\n        tx.executeSql(\n          `INSERT OR REPLACE INTO cache(name, value)\n           VALUES(?, ?)`,\n          [\"secret\", key], (tx, rs) => {}, (tx, rs) => {});\n      }));\n    }","read":"async () => {\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let result = await new Promise((resolve, reject) => database.transaction(tx => {\n        tx.executeSql(\n          \"SELECT value FROM cache WHERE name=?\",\n          [\"secret\"],\n          (tx, rs) => resolve(rs),\n          (tx, err) => reject(err));\n      }));\n      return result.rows.item(0).value;\n    }","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"The Web SQL Database is a deprecated web API for storing data in an SQL database."},"Alt-Svc":{"write":"async () => {\n      // Clear Alt-Svc caching first.\n      let responseText = \"\";\n      for (let i = 0; i < 10 && responseText !== \"h2\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/clear\");\n        console.log(\"clear\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h2\") {\n        // Clearing failed.\n        throw new Error(\"Unsupported\");\n      }\n      // Store \"h3\" state in Alt-Svc cache\n      for (let i = 0; i < 10 && responseText !== \"h3\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/protocol\");\n        console.log(\"protocol\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h3\") {\n        // Storage failed.\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => fetchText(\"https://h3.arthuredelstein.net:4433/protocol\")","unsupported":false,"readSameFirstParty":"h3","readDifferentFirstParty":"h3","passed":false,"testFailed":false,"description":"Alt-Svc allows the server to indicate to the web browser that a resource should be loaded on a different server. Because this is a persistent setting, it could be used to track users across websites if it is not correctly partitioned."},"H1 connection":{"write":"async (secret) => {\n      await fetch(`https://h1.arthuredelstein.net:8901/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h1.arthuredelstein.net:8901/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"HTTP/1.x are the classic web connection protocols. If these connections are re-used across websites, they can be used to track users."},"H2 connection":{"write":"async (secret) => {\n      await fetch(`https://h2.arthuredelstein.net:8902/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h2.arthuredelstein.net:8902/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","readDifferentFirstParty":"c121ad1b-abe1-422a-b7bf-df3c23409f22","passed":false,"testFailed":false,"description":"HTTP/2 is a web connection protocol introduced in 2015. Some browsers re-use HTTP/2 connections across websites and can thus be used to track users."},"H3 connection":{"write":"async (secret) => {\n      // Ensure that we can switch over to h3 via alt-svc:\n      for (let i = 0; i<3; ++i) {\n        await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n        await sleepMs(500);\n      }\n      // Are we now connecting over h3?\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n      let text = await response.text();\n      // Empty response text indicates we are not connecting over h3:\n      if (text.trim() === \"\") {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`);\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"dfae9cd22f3f78a0b9c817075a835aef","readDifferentFirstParty":"dfae9cd22f3f78a0b9c817075a835aef","passed":false,"testFailed":false,"description":"HTTP/3 is a new standard HTTP connection protocol, still in draft but widely supported by browsers. If it is not partitioned, it can be used to track users across websites."},"ServiceWorker":{"write":"async (key) => {\n      if (!navigator.serviceWorker) {\n        throw new Error(\"Unsupported\");\n      }\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      await fetch(`serviceworker-write?secret=${key}`);\n    }","read":"async () => {\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      let response = await fetch(\"serviceworker-read\");\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"","readDifferentFirstParty":"","testFailed":true,"description":"The ServiceWorker API allows websites to run code in the background and store content in the browser for offline use. If a ServiceWorker can be accessed from multiple websites, it can be abused to track users across sites."},"HSTS cache":{"description":"The HTTP Strict-Transport-Security response header allows a website to signal that it should only be accessed via HTTPS. The browser remembers this directive in a database, but if this database is not partitioned, then it can be used to track users across websites.\"","passed":false,"unsupported":false,"testFailed":false,"readDifferentFirstParty":"Upgraded to https","readSameFirstParty":"not tested","write":"set HSTS flag","read":"read HSTS flag"}},"trackers":{"Google Tag Manager":{"url":"https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL"},"DoubleClick (Google)":{"url":"https://securepubads.g.doubleclick.net/static/glade.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://securepubads.g.doubleclick.net/static/glade.js"},"Google Analytics":{"url":"https://google-analytics.com/urchin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://google-analytics.com/urchin.js"},"Facebook Pixel":{"url":"https://www.facebook.com/tr?id=123","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.facebook.com/tr?id=123"},"Amazon adsystem":{"url":"https://aax-us-east.amazon-adsystem.com/x/px","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://aax-us-east.amazon-adsystem.com/x/px"},"Google Syndication":{"url":"https://tpc.googlesyndication.com/sodar/UFYwWwmt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://tpc.googlesyndication.com/sodar/UFYwWwmt.js"},"Scorecard Research Beacon":{"url":"https://sb.scorecardresearch.com/internal-c2/default/cs.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://sb.scorecardresearch.com/internal-c2/default/cs.js"},"New Relic":{"url":"https://js-agent.newrelic.com/nr-1212.min.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://js-agent.newrelic.com/nr-1212.min.js"},"Criteo":{"url":"https://csm.da.us.criteo.net/iev","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://csm.da.us.criteo.net/iev"},"Adobe":{"url":"https://munchkin.marketo.net/munchkin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://munchkin.marketo.net/munchkin.js"},"Yandex Metrika":{"url":"https://mc.yandex.ru/metrika/tag.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://mc.yandex.ru/metrika/tag.js"},"AppNext":{"url":"https://acdn.adnxs.com/dmp/up/pixie.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://acdn.adnxs.com/dmp/up/pixie.js"},"Google Ad Services":{"url":"https://www.googleadservices.com/pagead/conversion.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googleadservices.com/pagead/conversion.js"},"Twitter Ads":{"url":"https://static.ads-twitter.com/uwt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://static.ads-twitter.com/uwt.js"},"Bing Ads":{"url":"https://bat.bing.com/bat.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://bat.bing.com/bat.js"},"Taboola":{"url":"https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js"},"Index Exchange":{"url":"https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1"},"Yandex Ads":{"url":"https://yandex.ru/ads/system/header-bidding.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://yandex.ru/ads/system/header-bidding.js"},"Quantcast":{"url":"https://pixel.quantserve.com/pixel","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pixel.quantserve.com/pixel"},"Chartbeat":{"url":"https://pdev.chartbeat.net/ping?h=x&p=x&r=&b=","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pdev.chartbeat.net/ping?h=x&p=x&r=&b="}}},"timeStarted":"2022-01-15T03:55:22.600Z","reportedVersion":"21.11.7.71","os":"Darwin","os_version":"Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101"},{"browser":"yandex","incognito":false,"nightly":false,"testResults":{"misc":{"Tor enabled":{"IsTorExit":false,"passed":false,"description":"The Tor network sends the browser's web requests through a series of relays to hide a user's IP address, thereby helping to mask their identity and location. This test checks to see if the Tor network is being used by default."},"GPC enabled third-party":{"passed":false,"description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a visited website not to sell the user's personal data to other parties. This test checks to see if the GPC header is sent to third-party elements on the web page."},"Stream isolation":{"write":"() => {\n      if (!usingTor) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (usingTor) {\n        return ipAddress;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","unsupported":true,"readSameFirstParty":"Error: Unsupported","readDifferentFirstParty":"Error: Unsupported","testFailed":false,"description":"Browsers that use Tor can use a different Tor circuit per top-level website."},"IP address leak":{"description":"IP addresses can be used to uniquely identify a large percentage of users. A proxy, VPN, or Tor can mask a user's IP address.","passed":false},"GPC enabled first-party":{"header value":"undefined","description":"The Global Privacy Control is an HTTP header that can be sent by a browser to instruct a website not to sell the user's personal data to third parties. This test checks to see if the GPC header is sent by default to the top-level website.","passed":false}},"query":{"fbclid":{"value":"4239638577658478","passed":false,"description":"Facebook Click Identifier"},"gclid":{"value":"4239638577658478","passed":false,"description":"Google Click Identifier"},"msclkid":{"value":"4239638577658478","passed":false,"description":"Microsoft Click ID"},"mc_eid":{"value":"4239638577658478","passed":false,"description":"Mailchimp Email ID (email recipient's address)"},"dclid":{"value":"4239638577658478","passed":false,"description":"DoubleClick Click ID (Google)"},"oly_anon_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'anonymous' customer id"},"oly_enc_id":{"value":"4239638577658478","passed":false,"description":"Omeda marketing 'known' customer id"},"_openstat":{"value":"4239638577658478","passed":false,"description":"Yandex tracking parameter"},"vero_conv":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"vero_id":{"value":"4239638577658478","passed":false,"description":"Vero tracking parameter"},"wickedid":{"value":"4239638577658478","passed":false,"description":"Wicked Reports e-commerce tracking"},"yclid":{"value":"4239638577658478","passed":false,"description":"Yandex Click ID"},"__s":{"value":"4239638577658478","passed":false,"description":"Drip.com email address tracking parameter"},"rb_clickid":{"value":"4239638577658478","passed":false,"description":"Unknown high-entropy tracking parameter"},"s_cid":{"value":"4239638577658478","passed":false,"description":"Adobe Site Catalyst tracking parameter"},"ml_subscriber":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"ml_subscriber_hash":{"value":"4239638577658478","passed":false,"description":"MailerLite email tracking"},"_hsenc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hssc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hstc":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"__hsfp":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"hsCtaTracking":{"value":"4239638577658478","passed":false,"description":"HubSpot tracking parameter"},"mkt_tok":{"value":"4239638577658478","passed":false,"description":"Adobe Marketo tracking parameter"},"igshid":{"value":"4239638577658478","passed":false,"description":"Instagram tracking parameter"}},"https":{"Upgradable image":{"passed":true,"result":"upgraded","description":"Checks to see if the browser attempts to upgrade an insecure address for an image to HTTPS whenever possible."},"Upgradable script":{"passed":true,"result":"blocked","description":"Checks to see if the browser attempts to upgrade an insecure address for an script to HTTPS whenever possible."},"Upgradable hyperlink":{"upgraded":false,"passed":false,"description":"Checks to see if the user has clicked on a hyperlink to an insecure address, if the browser upgrades that address to HTTPS whenever possible."},"Upgradable address":{"upgraded":false,"passed":false,"description":"Checks to see if an insecure address entered into the browser's address bar is upgraded to HTTPS whenever possible."},"Insecure website":{"passed":false,"result":"Insecure website loaded","description":"Checks to see if the browser stops loading an insecure website and warns the user before giving them the option to continue. Known as HTTPS-Only Mode in some browsers."}},"fingerprinting":{"screenX":{"expression":"screenX","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the left edge of the browser window on screen."},"screenY":{"expression":"screenY","desired_expression":0,"actual_value":0,"desired_value":0,"passed":true,"description":"Position, in pixels, of the top edge of the browser window on screen."},"outerHeight":{"expression":"outerHeight","desired_expression":"innerHeight","actual_value":520,"desired_value":1416,"passed":false,"description":"Height of the browser window in pixels, including browser chrome."},"screen.width":{"expression":"screen.width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen, in pixels."},"screen.height":{"expression":"screen.height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen, in pixels."},"Media query screen width":{"name":"Media query screen width","desired_expression":"innerWidth","actual_value":360,"desired_value":980,"passed":false,"description":"Width of the user's screen in pixels."},"Media query screen height":{"name":"Media query screen height","desired_expression":"innerHeight","actual_value":640,"desired_value":1416,"passed":false,"description":"Height of the user's screen in pixels."}},"navigation":{"sessionStorage":{"write":"(secret) => sessionStorage.setItem(\"secret\", secret)","read":"() => sessionStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The sessionStorage API is similar to the localStorage API, but it does not persist across tabs or across browser sessions. Nonetheless, it can be used to track users if they navigate from one website to another. This tracking can be thwarted by partitioning sessionStorage between websites."},"window.name":{"write":"(secret) => parent.postMessage({\"write window.name\": secret})","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read window.name\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The window.name API allows websites to store data that will persist after the user has navigated the tab to a different website. This mechanism could be partitioned so that data is not allowed to persist between websites."},"document.referrer":{"write":"(secret) => { /* do nothing */ }","read":"() => new Promise((resolve) => {\n      parent.postMessage({\"read document.referrer\": true}, \"*\");\n      addEventListener(\"message\", ({data}) => {\n        resolve(data);\n      }, { once: true });\n    })","unsupported":false,"readSameFirstParty":"https://arthuredelstein.net/","readDifferentFirstParty":"https://arthuredelstein.net/","passed":false,"testFailed":false,"description":"The Referer [sic] request header is a mechanism used by browsers to let a website know where the user is visiting from. This header is inherently tracking users across websites. In recent times, browsers have switched to a policy of trimming a referrer to convey less tracking information, but Referer continues to convey cross-site tracking data by default."}},"supercookies":{"cookie":{"write":"(secret) => {\n      let expiry = new Date();\n      expiry.setFullYear(expiry.getFullYear() + 1);\n      document.cookie = `secret=${secret}; SameSite=None; Secure`;\n    }","read":"() => document.cookie ? document.cookie.match(/secret=(\\S+)/)[1] : null","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The cookie, first introduced by Netscape in 1994, is a small amount of data stored by your browser on a website's behalf. It has legitimate uses, but it is also the classic cross-site tracking mechanism, and today still the most popular method of tracking users across websites. Browsers can stop cookies from being used for cross-site tracking by either blocking or partitioning them."},"localStorage":{"write":"(secret) => localStorage.setItem(\"secret\", secret)","read":"() => localStorage.getItem(\"secret\")","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The localStorage API gives websites access to a key-value database that will remain available across visits. If the localStorage API is not partitioned or blocked, it can also be used to track users across websites."},"indexedDB":{"write":"async (secret) => {\n      try {\n        return await IdbKeyVal.set(\"secret\", secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => IdbKeyVal.get(\"secret\")","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The IndexedDB API exposes a transactional database to web pages. That database can be used to track users across websites, unless it is partitioned."},"SharedWorker":{"write":"(secret) => {\n      try {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(secret);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let worker = new SharedWorker(\"supercookies_sharedworker.js\");\n        worker.port.start();\n        worker.port.postMessage(\"request\");\n        worker.port.onmessage = (e) => resolve(e.data);\n        setTimeout(() => reject(\"no SharedWorker message received\"), 100);\n      })","unsupported":true,"readSameFirstParty":"Error: SharedWorker is not defined","readDifferentFirstParty":"Error: SharedWorker is not defined","testFailed":false,"description":"The SharedWorker API allows scripts from multiple tabs to share a background thread of computation. If SharedWorker is not partitioned, then it can be abused to shared data between websites in your browser."},"blob":{"write":"(secret) => {\n      try {\n        let blobURL = URL.createObjectURL(new Blob([secret]));\n        fetch(`${baseURI}/blob?mode=write&key=${secret}&blobUrl=${encodeURIComponent(blobURL)}`);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async (secret) => {\n      let response = await fetch(`${baseURI}/blob?mode=read&key=${secret}`);\n      let result = await response.json();\n      let blobUrl = decodeURIComponent(result.blobUrl);\n      let blobResponse = await fetch(blobUrl);\n      return blobResponse.text();\n    }","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"A 'blob URL' is a local reference to some raw data. Trackers can use a blob URL to share data between websites."},"BroadcastChannel":{"write":"(secret) => {\n      try {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data === \"request\") {\n            bc.postMessage(secret);\n          }\n        };\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() =>\n      new Promise((resolve, reject) => {\n        let bc = new BroadcastChannel(\"secrets\");\n        bc.onmessage = (event) => {\n          if (event.data !== \"request\") {\n            resolve(event.data);\n          }\n        };\n        bc.postMessage(\"request\");\n        setTimeout(() => reject({message: \"no BroadcastChannel message\"}), 3000);\n      })","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"A BroadcastChannel is designed to send messages between tabs. In some browsers it can be used for cross-site communication and tracking."},"fetch cache":{"write":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      return key;\n    }","read":"async (key) => {\n      let response = await fetch(testURI(\"resource\", \"fetch\", key),\n                                 {cache: \"force-cache\"});\n      let countResponse = await fetch(testURI(\"ctr\", \"fetch\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"When a resource is received via the Fetch API, it is frequently cached. That cache can potentially be abused for cross-site tracking."},"XMLHttpRequest cache":{"write":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      return key;\n    }","read":"async (key) => {\n      const req = new XMLHttpRequest();\n      const loadPromise = new Promise(resolve => req.addEventListener(\"load\", resolve));\n      req.open(\"GET\", testURI(\"resource\", \"xhr\", key));\n      req.send();\n      await loadPromise;\n      let countResponse = await fetch(testURI(\"ctr\", \"xhr\", key),\n                                      {cache: \"reload\"});\n      return (await countResponse.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Similar to the newer Fetch API, any resource received may be cached by the browser. The cache is potentially vulnerable to cross-site tracking attack."},"iframe cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      iframe.addEventListener(\"load\", () => resolve(key), {once: true});\n      iframe.src = testURI(\"resource\", \"page\", key);\n    })","read":"async (key) => {\n      let iframe = document.createElement(\"iframe\");\n      document.body.appendChild(iframe);\n      let iframeLoadPromise = new Promise((resolve, reject) => {\n        iframe.addEventListener(\"load\", resolve, {once: true});\n      });\n      let address = testURI(\"resource\", \"page\", key);\n      iframe.src = address;\n      await iframeLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"page\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"An iframe is an element in a web page than allows websites to embed a second web page. Caching of this web page could be abused for cross-site tracking."},"image cache":{"write":"(key) => new Promise((resolve, reject) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.addEventListener(\"load\", () => resolve(key), {once: true});\n      img.src = testURI(\"resource\", \"image\", key);\n    })","read":"async (key) => {\n      let img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      let imgLoadPromise = new Promise((resolve, reject) => {\n        img.addEventListener(\"load\", resolve, {once: true});\n      });\n      img.src = testURI(\"resource\", \"image\", key);\n      await imgLoadPromise;\n      let response = await fetch(\n        testURI(\"ctr\", \"image\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Caching of images in web browsers is a standard behavior. But if that cache leaks between websites, it can be abused for cross-site tracking."},"CacheStorage":{"write":"async (key) => {\n      try {\n        let cache = await caches.open(\"supercookies\");\n        cache.addAll([`test.css?key=${key}`]);\n      } catch (e) {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let cache = await caches.open(\"supercookies\");\n      let cacheKeys = await cache.keys();\n      let url = cacheKeys[0].url;\n      return (new URL(url)).searchParams.get(\"key\");\n    }","unsupported":false,"readSameFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","readDifferentFirstParty":"fc6672b5-c2e0-40e1-bac8-008f561e753b","passed":false,"testFailed":false,"description":"The Cache API is a content storage mechanism originally introduced to support ServiceWorkers. If the same Cache object is accessible to multiple websites, it can be abused to track users."},"favicon cache":{"write":"(key) => key","read":"async (key) => {\n      // Wait for the favicon to load (defined in supercookies.html)\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"favicon\", key), {\"cache\": \"reload\"});\n      let count = (await response.text()).trim();\n      if (count === \"0\") {\n        throw new Error(\"No requests received\");\n      }\n      return count;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A favicon is an icon that represents a website, typically shown in browser tab and bookmarks menu. If the favicon cache is not partitioned, it can be used to track users across websites."},"font cache":{"write":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      return key;\n    }","read":"async (key) => {\n      let style = document.createElement(\"style\");\n      style.type='text/css';\n      let fontURI = testURI(\"resource\", \"font\", key);\n      style.innerHTML = `@font-face {font-family: \"myFont\"; src: url(\"${fontURI}\"); } body { font-family: \"myFont\" }`;\n      document.getElementsByTagName(\"head\")[0].appendChild(style);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"font\", key), {\"cache\": \"reload\"});\n      return (await response.text()).trim();\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"Web fonts are sometimes stored in their own cache, which is vulnerable to being abused for cross-site tracking."},"CSS cache":{"write":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return key;\n    }","read":"async (key) => {\n      const href = testURI(\"resource\", \"css\", key);\n      const head = document.getElementsByTagName(\"head\")[0];\n      head.innerHTML += `<link type=\"text/css\" rel=\"stylesheet\" href=\"${href}\">`;\n      const testElement = document.querySelector(\"#css\");\n      let fontFamily;\n      while (true) {\n        await sleepMs(100);\n        fontFamily = getComputedStyle(testElement).fontFamily;\n        if (fontFamily.startsWith(\"fake\")) {\n          break;\n        }\n      }\n      console.log(fontFamily);\n      return fontFamily;\n    }","unsupported":false,"readSameFirstParty":"fake_4411446934201073","readDifferentFirstParty":"fake_17505948825769457","passed":true,"testFailed":false,"description":"CSS stylesheets are cached, and if that cache is shared between websites, it can be used to track users across sites."},"locks":{"write":"async (key) => {\n      if (navigator.locks) {\n        navigator.locks.request(key, lock => new Promise((f,r) => {}));\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].clientId;\n      } else {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      if (navigator.locks) {\n        let queryResult = await navigator.locks.query();\n        return queryResult.held[0].name;\n      }\n    }","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"navigator.locks (only supported in some browsers) allows scripts on multiple tabs to coordinate. If this API is not partitioned, it can be used for cross-site tracking."},"TLS Session ID":{"write":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","read":"async () => {\n      let results = await fetch(\"https://tls.arthuredelstein.net:8900/\");\n      return (await results.json()).sessionId;\n    }","unsupported":false,"readSameFirstParty":"b8e6200cbf6b6b9711d0f2391e2c0dedbdb86f76a878afc40fb1b95300205156","readDifferentFirstParty":"328da53bbb21ddb5602018722660b6e6f011e4b57fd620efdd8d50b2190f9958","passed":true,"testFailed":false,"description":"The TLS protocol is used by HTTPS to make connections secure. If the browser were to re-use a TLS session, then the session ID could be used to track users across websites."},"prefetch cache":{"write":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      return key;\n    }","read":"async (key) => {\n      let link = document.createElement(\"link\");\n      link.rel = \"prefetch\";\n      link.href = testURI(\"resource\", \"prefetch\", key);\n      document.getElementsByTagName(\"head\")[0].appendChild(link);\n      await sleepMs(500);\n      let response = await fetch(\n        testURI(\"ctr\", \"prefetch\", key), {\"cache\": \"reload\"});\n      let countString = (await response.text()).trim();\n      if (parseInt(countString) === 0) {\n        throw new Error(\"No requests received\");\n      }\n      return countString;\n    }","unsupported":false,"readSameFirstParty":"1","readDifferentFirstParty":"2","passed":true,"testFailed":false,"description":"A <link rel='prefetch'...> suggests to browsers they should fetch a resource ahead of time and cache it. But if browsers don't partition this cache, it can be used to track users across websites."},"Web SQL Database":{"write":"async (key) => {\n      if (!window.openDatabase) {\n        throw new Error(\"Unsupported\");\n      }\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let tx = new Promise((resolve) => database.transaction(tx => {\n        tx.executeSql(\n          `CREATE TABLE IF NOT EXISTS cache(\n             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n             name TEXT NOT NULL,\n             value TEXT NOT NULL,\n             UNIQUE (name)\n           )`,\n          [], (tx, rs) => {}, (tx, err) => {});\n        tx.executeSql(\n          `INSERT OR REPLACE INTO cache(name, value)\n           VALUES(?, ?)`,\n          [\"secret\", key], (tx, rs) => {}, (tx, rs) => {});\n      }));\n    }","read":"async () => {\n      let database = window.openDatabase(\"sqlite_supercookie\", \"\", \"supercookie\", 1024 * 1024);\n      let result = await new Promise((resolve, reject) => database.transaction(tx => {\n        tx.executeSql(\n          \"SELECT value FROM cache WHERE name=?\",\n          [\"secret\"],\n          (tx, rs) => resolve(rs),\n          (tx, err) => reject(err));\n      }));\n      return result.rows.item(0).value;\n    }","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"The Web SQL Database is a deprecated web API for storing data in an SQL database."},"Alt-Svc":{"write":"async () => {\n      // Clear Alt-Svc caching first.\n      let responseText = \"\";\n      for (let i = 0; i < 10 && responseText !== \"h2\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/clear\");\n        console.log(\"clear\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h2\") {\n        // Clearing failed.\n        throw new Error(\"Unsupported\");\n      }\n      // Store \"h3\" state in Alt-Svc cache\n      for (let i = 0; i < 10 && responseText !== \"h3\"; ++i) {\n        responseText = await fetchText(\"https://h3.arthuredelstein.net:4433/protocol\");\n        console.log(\"protocol\", responseText, i);\n        await sleepMs(10);\n      }\n      if (responseText !== \"h3\") {\n        // Storage failed.\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"() => fetchText(\"https://h3.arthuredelstein.net:4433/protocol\")","unsupported":false,"readSameFirstParty":"h3","readDifferentFirstParty":"h3","passed":false,"testFailed":false,"description":"Alt-Svc allows the server to indicate to the web browser that a resource should be loaded on a different server. Because this is a persistent setting, it could be used to track users across websites if it is not correctly partitioned."},"H1 connection":{"write":"async (secret) => {\n      await fetch(`https://h1.arthuredelstein.net:8901/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h1.arthuredelstein.net:8901/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"HTTP/1.x are the classic web connection protocols. If these connections are re-used across websites, they can be used to track users."},"H2 connection":{"write":"async (secret) => {\n      await fetch(`https://h2.arthuredelstein.net:8902/?mode=write&secret=${secret}`, {cache: \"no-store\"});\n    }","read":"async () => {\n      let response = await fetch(`https://h2.arthuredelstein.net:8902/?mode=read`, {cache: \"no-store\"});\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","readDifferentFirstParty":"ff425b21-d56a-429e-abef-c652313e72ba","passed":false,"testFailed":false,"description":"HTTP/2 is a web connection protocol introduced in 2015. Some browsers re-use HTTP/2 connections across websites and can thus be used to track users."},"H3 connection":{"write":"async (secret) => {\n      // Ensure that we can switch over to h3 via alt-svc:\n      for (let i = 0; i<3; ++i) {\n        await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n        await sleepMs(500);\n      }\n      // Are we now connecting over h3?\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`, {cache: \"no-store\"});\n      let text = await response.text();\n      // Empty response text indicates we are not connecting over h3:\n      if (text.trim() === \"\") {\n        throw new Error(\"Unsupported\");\n      }\n    }","read":"async () => {\n      let response = await fetch(`https://h3.arthuredelstein.net:4433/connection_id`);\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"cec715300789969d584bf870315cb725","readDifferentFirstParty":"cec715300789969d584bf870315cb725","passed":false,"testFailed":false,"description":"HTTP/3 is a new standard HTTP connection protocol, still in draft but widely supported by browsers. If it is not partitioned, it can be used to track users across websites."},"ServiceWorker":{"write":"async (key) => {\n      if (!navigator.serviceWorker) {\n        throw new Error(\"Unsupported\");\n      }\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      await fetch(`serviceworker-write?secret=${key}`);\n    }","read":"async () => {\n      let registration = await navigator.serviceWorker.register(\n        'serviceWorker.js');\n      console.log(registration);\n      await navigator.serviceWorker.ready;\n      console.log(\"service worker ready\");\n      await sleepMs(100);\n      let response = await fetch(\"serviceworker-read\");\n      return await response.text();\n    }","unsupported":false,"readSameFirstParty":"","readDifferentFirstParty":"","testFailed":true,"description":"The ServiceWorker API allows websites to run code in the background and store content in the browser for offline use. If a ServiceWorker can be accessed from multiple websites, it can be abused to track users across sites."},"HSTS cache":{"description":"The HTTP Strict-Transport-Security response header allows a website to signal that it should only be accessed via HTTPS. The browser remembers this directive in a database, but if this database is not partitioned, then it can be used to track users across websites.\"","passed":false,"unsupported":false,"testFailed":false,"readDifferentFirstParty":"Upgraded to https","readSameFirstParty":"not tested","write":"set HSTS flag","read":"read HSTS flag"}},"trackers":{"Google Tag Manager":{"url":"https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googletagmanager.com/gtag.js?id=GTM-NX4SMZL"},"DoubleClick (Google)":{"url":"https://securepubads.g.doubleclick.net/static/glade.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://securepubads.g.doubleclick.net/static/glade.js"},"Google Analytics":{"url":"https://google-analytics.com/urchin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://google-analytics.com/urchin.js"},"Facebook Pixel":{"url":"https://www.facebook.com/tr?id=123","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.facebook.com/tr?id=123"},"Amazon adsystem":{"url":"https://aax-us-east.amazon-adsystem.com/x/px","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://aax-us-east.amazon-adsystem.com/x/px"},"Google Syndication":{"url":"https://tpc.googlesyndication.com/sodar/UFYwWwmt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://tpc.googlesyndication.com/sodar/UFYwWwmt.js"},"Scorecard Research Beacon":{"url":"https://sb.scorecardresearch.com/internal-c2/default/cs.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://sb.scorecardresearch.com/internal-c2/default/cs.js"},"New Relic":{"url":"https://js-agent.newrelic.com/nr-1212.min.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://js-agent.newrelic.com/nr-1212.min.js"},"Criteo":{"url":"https://csm.da.us.criteo.net/iev","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://csm.da.us.criteo.net/iev"},"Adobe":{"url":"https://munchkin.marketo.net/munchkin.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://munchkin.marketo.net/munchkin.js"},"Yandex Metrika":{"url":"https://mc.yandex.ru/metrika/tag.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://mc.yandex.ru/metrika/tag.js"},"AppNext":{"url":"https://acdn.adnxs.com/dmp/up/pixie.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://acdn.adnxs.com/dmp/up/pixie.js"},"Google Ad Services":{"url":"https://www.googleadservices.com/pagead/conversion.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://www.googleadservices.com/pagead/conversion.js"},"Twitter Ads":{"url":"https://static.ads-twitter.com/uwt.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://static.ads-twitter.com/uwt.js"},"Bing Ads":{"url":"https://bat.bing.com/bat.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://bat.bing.com/bat.js"},"Taboola":{"url":"https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://cdn.taboola.com/libtrc/UNIQUEID/tfa.js"},"Index Exchange":{"url":"https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://dsum-sec.casalemedia.com/crum?cm_dsp_id=10&external_user_id=629685505537&C=1"},"Yandex Ads":{"url":"https://yandex.ru/ads/system/header-bidding.js","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://yandex.ru/ads/system/header-bidding.js"},"Quantcast":{"url":"https://pixel.quantserve.com/pixel","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pixel.quantserve.com/pixel"},"Chartbeat":{"url":"https://pdev.chartbeat.net/ping?h=x&p=x&r=&b=","passed":false,"description":"Tests whether the browser blocks the page from loading the tracker at https://pdev.chartbeat.net/ping?h=x&p=x&r=&b="}}},"timeStarted":"2022-01-15T03:56:36.146Z","reportedVersion":"21.11.7.71","os":"Darwin","os_version":"Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101"}],"git":"a1783a782570f20129c35fdc202245a49178d6c5","timeStarted":"2022-01-15T03:51:23.411Z","timeStopped":"2022-01-15T03:58:01.458Z","platform":"Android"}